name: CI
on:
  push:
    branches: 
      - master
      - release/*
      - dev/*
      - cluster/*
  pull_request:
    branches: 
      - master
      - release/*
      - dev/*
      - cluster/*
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: config
        run: cp ini/config.ini.ci ini/config.ini
      - name: install
        run: npm install
      - name: inject commit sha
        run: sed -i 's/\$\$GITHUB_SHA\$\$/'"${GITHUB_SHA}"'/' public/index.html
      - name: build
        # circular dependencies are currently throwing warnings
        run: CI=false npm run build
      - name: tar
        run: tar -zcvf build.tar.gz ./build
      - name: save artifact
        uses: actions/upload-artifact@v2
        with:
          name: build.tar.gz
          path: build.tar.gz
  image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Fetch artifact
        uses: actions/download-artifact@v2
        with:
          name: build.tar.gz
      - name: unpack
        run: tar -zxvf build.tar.gz && ls -l

      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / _)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / _)" >> $GITHUB_ENV

      - name: echo branch name
        run: echo ${{ env.BRANCH_NAME }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: build image
        run: docker build -t docker-snapshots.community-boating.org/cbidb-staff-web:${{ env.BRANCH_NAME }} .
      - name: Log in to nexus Registry
        run: docker login -u ci -p ${{ secrets.NEXUS_PASSWORD }} docker-snapshots.community-boating.org
      - name: push image nexus
        run: docker push docker-snapshots.community-boating.org/cbidb-staff-web:${{ env.BRANCH_NAME }}

      - name: tag & push aws
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker tag docker-snapshots.community-boating.org/cbidb-staff-web:${{ env.BRANCH_NAME }} $ECR_REGISTRY/cbidb-staff-web-snapshot:${{ env.BRANCH_NAME }}
          docker push $ECR_REGISTRY/cbidb-staff-web-snapshot:${{ env.BRANCH_NAME }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
